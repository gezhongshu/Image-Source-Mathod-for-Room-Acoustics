% Save the planes structure

clc; clear
% lwh 20 20 10 rectangular for example
% plane = [1,0,0,-20; ... % East 
%     -1,0,0,0; ...  % West 
%     0,1,0,-20; ... % North 
%     0,-1,0,0; ...  % South 
%     0,0,-1,0;...  % Floor 
%     0,0,1,-10 ... % Ceiling 
%     ];

% wall = [2 3 6 7; ... % East 
%         1 4 5 8; ... % West 
%         3 4 7 8; ... % North 
%         1 2 5 6; ... % South 
%         1 2 3 4; ... % Floor 
%         5 6 7 8];    % Ceiling 
% vertex = [0  0  0; ...
%           20 0  0; ...
%           20 20 0; ...
%           0  20 0; ...
%           0  0  10; ...
%           20 0  10; ...
%           20 20 10; ...
%           0  20 10];


% wall = [5 6 7 8; ...
%         1 4 8 7; ...
%         1 2 3 4; ...
%         3 2 6 5; ...
%         3 5 8 4; ...
%         1 7 6 2];
% vertex = [0  0  0; ...
%           0  40 0; ...
%           20 40 0; ...
%           20 0  0; ...
%           20 40 25; ...
%           0  40 25; ...
%           0  0  30; ...
%           20 0  30];

wall = [1 2 8  7  0 0; ... 
        2 3 9  8  0 0; ... 
        3 4 10 9 0 0; ... 
        4 5 11 10 0 0; ... 
        5 6 12 11 0 0; ... 
        1 6 12 7 0 0; ...
        1 2 3  4  5 6; ...
        7 8 9 10 11 12];
    
vertex = [0  0   0; ...
          9  0   0; ...
          9  8   0; ...
          6  8   0; ...
          6  7.5 0; ...
          0  7.5 0; ...
          0  0   3.5; ...
          9  0   3.5; ...
          9  8   3.5; ...
          6  8   3.5; ...
          6  7.5 3.5; ...
          0  7.5 3.5; ...
          ];

% Source position
src = [4.5, 0.5, 2.0, 1];
% Receiver position
rcv = [1.5, 2, 2.0, 1];

% generate the function of every wall
wnum = size(wall,1);
plane = zeros(wnum,4);
for n = 1:1:wnum
    p1 = vertex(wall(n,2),:) - vertex(wall(n,1),:);
    p2 = vertex(wall(n,3),:) - vertex(wall(n,1),:);
    A = p1(2)*p2(3)-p2(2)*p1(3);
    B = p1(3)*p2(1)-p2(3)*p1(1);
    C = p1(1)*p2(2)-p2(1)*p1(2);
    D = -(A*vertex(wall(n,1),1)+B*vertex(wall(n,1),2)+C*vertex(wall(n,1),3));
    plane(n,:) = [A B C D];
    % here we have to test the directions of the plane vectors and set them
    % go backwards the source point. This is a must for later angle
    % calculation in the axis transformation part
    testvect = vertex(wall(n,1),:)-src(1:3);
    temp = dot(testvect,plane(n,1:3));
    if temp < 0
        plane(n,1:3) = -plane(n,1:3);
    end
end

T = 0.1; % Total time
Fs = 96000; % Sample Rate
beta = -0.95; % Absorbtion Coefficient
c = 343.0; % velocity of the sound
%% Uncomment the following for a 3D plot of the above setup:
 %plot3(SetupStruc.src_traj(:,1),SetupStruc.src_traj(:,2),SetupStruc.src_traj(:,3),'ro-','markersize',4); hold on;
 %plot3(SetupStruc.mic_pos(:,1),SetupStruc.mic_pos(:,2),SetupStruc.mic_pos(:,3),'ko','markerfacecolor',ones(1,3)*.6);
 %axis equal; axis([0 SetupStruc.room(1) 0 SetupStruc.room(2) 0 SetupStruc.room(3)]);
 %box on; xlabel('x-axis (m)'); ylabel('y-axis (m)'); zlabel('z-axis (m)');